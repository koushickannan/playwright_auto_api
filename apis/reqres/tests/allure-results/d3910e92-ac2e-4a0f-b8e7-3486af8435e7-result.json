{"name": "test_get_user_by_id", "status": "broken", "statusDetails": {"message": "TypeError: __init__() got an unexpected keyword argument 'path_id'", "trace": "self = <users_tests.TestUserModules object at 0x7f001f2d45e0>\nuser_client = <products.reqres.clients.user_client.UserClient object at 0x7f001f239670>\ntenant_admin_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjEiLCJ1c2VySWQiOiI3MzkiLCJzdG9yZUNvZGUiOiI3MTAiLCJsYW5nQ29kZSI6...IsImV4cCI6MTcxOTI5MzEzNCwiaWF0IjoxNzE5MjA2NzM0LCJpc3MiOiIxIiwic3ViIjoiMSJ9.lyUnz5CuRRTdkVWepZqeRpyZB5TZm11TtO_fRz4nUK8'\n\n    @step(\"Get Users by User ID\")\n    @pytest.mark.reqres\n    @pytest.mark.dependency()\n    def test_get_user_by_id(self, user_client, tenant_admin_token):\n        user_id = self.__class__.user_id\n        endpoint_key = \"get_user_id_endpoint\"  # This should match your endpoint configuration key\n>       status_code, response = user_client.get_user(\n            endpoint_key=endpoint_key,\n            auth_token=tenant_admin_token,\n            path_params={\"user_id\": user_id}\n        )\n\nusers_tests.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <products.reqres.clients.user_client.UserClient object at 0x7f001f239670>\nendpoint_key = 'get_user_id_endpoint', query_params = None\nauth_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjEiLCJ1c2VySWQiOiI3MzkiLCJzdG9yZUNvZGUiOiI3MTAiLCJsYW5nQ29kZSI6...IsImV4cCI6MTcxOTI5MzEzNCwiaWF0IjoxNzE5MjA2NzM0LCJpc3MiOiIxIiwic3ViIjoiMSJ9.lyUnz5CuRRTdkVWepZqeRpyZB5TZm11TtO_fRz4nUK8'\npath_params = {'user_id': 1474129}\n\n    def get_user(\n            self,\n            endpoint_key: str,\n            query_params: dict = None,\n            auth_token: str = None,\n            path_params: dict = None\n    ) -> (int, dict):\n>       endpoint = GetEndpoint(\n            endpoint=endpoint_key,\n            query_params=query_params,\n            path_id=path_params\n        )\nE       TypeError: __init__() got an unexpected keyword argument 'path_id'\n\n../clients/user_client.py:25: TypeError"}, "description": "Scenarios: Users", "steps": [{"name": "Get Users by User ID", "status": "broken", "statusDetails": {"message": "TypeError: __init__() got an unexpected keyword argument 'path_id'\n", "trace": "  File \"/home/ldl-koushic/.local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/ldl-koushic/git/github/playwright_api_auto/products/reqres/tests/users_tests.py\", line 63, in test_get_user_by_id\n    status_code, response = user_client.get_user(\n  File \"/home/ldl-koushic/git/github/playwright_api_auto/products/reqres/clients/user_client.py\", line 25, in get_user\n    endpoint = GetEndpoint(\n"}, "parameters": [{"name": "user_client", "value": "<products.reqres.clients.user_client.UserClient object at 0x7f001f239670>"}, {"name": "tenant_admin_token", "value": "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjEiLCJ1c2VySWQiOiI3MzkiLCJzdG9yZUNvZGUiOiI3MTAiLCJsYW5nQ29kZSI6ImVuIiwicm9sZSI6InRlbmFudF9hZG1pbiIsInJvbGVJZCI6NDQ1LCJleHRlcm5hbFVzZXJJZCI6IjY4ODkiLCJyZWdpb24iOiJVUyIsImV4cCI6MTcxOTI5MzEzNCwiaWF0IjoxNzE5MjA2NzM0LCJpc3MiOiIxIiwic3ViIjoiMSJ9.lyUnz5CuRRTdkVWepZqeRpyZB5TZm11TtO_fRz4nUK8'"}], "start": 1719206736002, "stop": 1719206736002}], "start": 1719206736002, "stop": 1719206736003, "uuid": "eaa0be3f-d391-4b32-8d2d-12f7a4a951d9", "historyId": "9e7cb54f99042a4709ed88168e9c7b2d", "testCaseId": "9e7cb54f99042a4709ed88168e9c7b2d", "fullName": "products.reqres.tests.users_tests.TestUserModules#test_get_user_by_id", "labels": [{"name": "story", "value": "Verify user modules"}, {"name": "epic", "value": "Users"}, {"name": "tag", "value": "dependency"}, {"name": "tag", "value": "reqres"}, {"name": "parentSuite", "value": "products.reqres.tests"}, {"name": "suite", "value": "users_tests"}, {"name": "subSuite", "value": "TestUserModules"}, {"name": "host", "value": "ldlkoushic-HP-Pavilion-Laptop-13-bb0078TU-Refurb"}, {"name": "thread", "value": "11786-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "products.reqres.tests.users_tests"}]}