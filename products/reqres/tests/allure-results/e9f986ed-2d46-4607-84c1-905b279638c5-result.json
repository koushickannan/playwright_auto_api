{"name": "test_create_tenant_admin_token", "status": "broken", "statusDetails": {"message": "TypeError: path_parameters() missing 1 required positional argument: 'user_id'", "trace": "self = <users_tests.TestUserModules object at 0x7f01d5c978b0>\nuser_client = <products.reqres.clients.user_client.UserClient object at 0x7f01d5b8a250>\n\n    @step(\"Get Users by global ID\")\n    @pytest.mark.reqres\n    @pytest.mark.dependency()\n    def test_create_tenant_admin_token(self, user_client):\n        query_params = {\"nrpId\": \"8BL-0006\"}\n        endpoint_key = \"get_user_endpoint\"  # This should match your endpoint configuration key\n>       status_code, response = user_client.get_user(endpoint_key=endpoint_key, query_params=query_params)\n\nusers_tests.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../clients/user_client.py:18: in get_user\n    status_code, response = self.request_processor(endpoint)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <products.reqres.clients.user_client.UserClient object at 0x7f01d5b8a250>\nendpoint = <products.reqres.endpoints.get_endpoint.GetEndpoint object at 0x7f01d5b8ad90>\nkwargs = {}, url = '/org-user/v1/users', http_method = 'GET'\nquery_params = {'nrpId': '8BL-0006'}\n\n    def request_processor(self, endpoint: IEndpointTemplate.__class__, **kwargs) -> (int, dict):\n        \"\"\"\n        This function processes the http request based on http methods\n        :param endpoint: it takes endpoint specifications which can be\n        provided by extending the \"IEndpointTemplate\" interface\n        :param kwargs: it takes keyword arguments required in special cases,\n        these are optional arguments\n        :return: it returns http status code and response\n        \"\"\"\n        url = endpoint.url()\n        http_method = endpoint.http_method()\n        query_params = endpoint.query_parameters()\n>       path_params = endpoint.path_parameters(**kwargs)\nE       TypeError: path_parameters() missing 1 required positional argument: 'user_id'\n\n../../../core/base/base_client.py:26: TypeError"}, "description": "Scenarios: Get Users", "steps": [{"name": "Get Users by global ID", "status": "broken", "statusDetails": {"message": "TypeError: path_parameters() missing 1 required positional argument: 'user_id'\n", "trace": "  File \"/home/ldl-koushic/.local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/ldl-koushic/git/github/playwright_auto/products/reqres/tests/users_tests.py\", line 28, in test_create_tenant_admin_token\n    status_code, response = user_client.get_user(endpoint_key=endpoint_key, query_params=query_params)\n  File \"/home/ldl-koushic/git/github/playwright_auto/products/reqres/clients/user_client.py\", line 18, in get_user\n    status_code, response = self.request_processor(endpoint)\n  File \"/home/ldl-koushic/git/github/playwright_auto/core/base/base_client.py\", line 26, in request_processor\n    path_params = endpoint.path_parameters(**kwargs)\n"}, "parameters": [{"name": "user_client", "value": "<products.reqres.clients.user_client.UserClient object at 0x7f01d5b8a250>"}], "start": 1718790934009, "stop": 1718790934009}], "start": 1718790934009, "stop": 1718790934010, "uuid": "8e54a60b-e56f-4f16-bd99-8e99dc9b9d7a", "historyId": "02f8d28191bbaa08484b8e1f7c12eb5c", "testCaseId": "02f8d28191bbaa08484b8e1f7c12eb5c", "fullName": "products.reqres.tests.users_tests.TestUserModules#test_create_tenant_admin_token", "labels": [{"name": "story", "value": "Verify user modules"}, {"name": "epic", "value": "Users"}, {"name": "tag", "value": "dependency"}, {"name": "tag", "value": "reqres"}, {"name": "parentSuite", "value": "products.reqres.tests"}, {"name": "suite", "value": "users_tests"}, {"name": "subSuite", "value": "TestUserModules"}, {"name": "host", "value": "ldlkoushic-HP-Pavilion-Laptop-13-bb0078TU-Refurb"}, {"name": "thread", "value": "92784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "products.reqres.tests.users_tests"}]}